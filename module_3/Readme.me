# План работы

## Обработка NAN

Пропуски имеются в 4 столбцах:

### Cuisine Style 38410 non-null object
### Price Range 32639 non-null object
### Number of Reviews 46800 non-null float64
### Reviews 49998 non-null object

В колонке Reviews почти нет пропусков, а в Number of Reviews - много пропусков, возможно, что отзыв был, просто по какой-то причине не попал в счетчик отзывов. 
Количество пустых отзывов = 8112, а число пустых значений счетчика отзывов Number of Reviews NAN: 3200. 
Можно проверить, совпадают ли они, но я точно не успею. Мне не хочется Number of Reviews заполнять нулями, лучше заполню его средним значением.

Price Range NAN заполним средним значением.

Cuisine Style Обрабатываем NAN 

Reviews NAN заполним (нулями) средним значением

## Обработка признаков
### City
Составим список количества жителей на один ресторан в каждом городе. Для этого составим список количества ресторанов в каждом городе 
и количество жителей в городах, потом поделим значения списков. Это позволит нормализовать данные по количеству ресторанов.

### Cuisine Style
Оставляем 10 наиболее популярных стилей кухонь, остальные заменяем на Other
Применяем One-Hot Encoding, используя функцию get_dummies.
### В Restaurant_id имеются дубли, вряд ли он влияет на рейтинг, удалим его. Конечно, можно проверить корреляцию, но здравый смысл 
подсказывает, что ID обычно не влияет на результат.
### Кanking
Проверим корреляцию с другими признаками

### Price Range
Создаем три ценовых категории: дешевые, средние, дорогие рестораны. Заполняем пропуски.

### Number of Reviews

### Reviews:
Создаем отдельный признак - дату отзыва, рабатываем  NAN.
Создаем признак: дельта между отзывами
Создаем категории отзывов по ключевым словам для определения тональности: позитивный отзыв или негативный отзыв (не заработало)

## Исправление ошибки ввода
Замечено, что город Porto в базе присутствует под именем Oporto. Так как просто Porto не встречается ни разу, то не буду его исправлять, 
просто в конце сделаю примечание Oporto == Porto

## Сгенерируем dummy variables для построения модели
 city,   price_range,   Cuisine top N - Сокращенный список кухонь для анализа до N - основных, остальные Other

### Результат  
https://www.kaggle.com/elenamarais/em-module3-v3

Для меня проект оказался сложным. В целом из курса было понятно, что делать, но изучая работы из первой десятки в соревновании на kaggle  всё больше запутывалась. 
Хотела использовать внешние источники для определения тональности отзывов, код не заработал. 
Дальше тянуть со сдачей уже было нельзя, поетому отправила на kaggle как есть, сырой продукт, с которым еще работать и работать. 
С этим проектом можно копаться до бесконечности, изучая и оттачивая признаки.
Даже сдав работу, до конца в ней не разобралась: каждый раз нахожу ошибки, какие-то признаки в анализе, которых не создала или удалила.

В общем, рада была сдать проект, очень устала, много ночей не спала. 

Для оценки результата исхожу из принципа: важен не результат, а важно участие. 

# P.S. 
Не исключено, что ученые из Имперского колледжа Лондона поручили расчет смертности от ковида стажеру с моим опытом программирования. Интересно, какой MAE получился у их модели год назад?
